{"version":3,"file":"bundle.js","mappings":";;;;;;;;;AAAA;AACA,WAAW,mBAAO,CAAC,kBAAM;AACzB,aAAa,mBAAO,CAAC,sBAAQ;AAC7B,iBAAiB;;AAEjB;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA,EAAE;AACF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,sBAAsB;AACtC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACtFA;;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;ACNiD;AACjD,UAAU,iBAAiB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE;AAChE;AACA;AACA,0DAA0D;AAC1D;AACA,uBAAuB,+IAAe;AACtC;AACA;AACA;AACA;AACA;AACA,UAAU,OAAO;AACjB;AACA,UAAU,OAAO;AACjB;AACA,OAAO;AACP,UAAU,OAAO;AACjB,OAAO;AACP;AACA;AACA","sources":["webpack://code-class-bundler/./node_modules/console-browserify/index.js","webpack://code-class-bundler/external node-commonjs \"assert\"","webpack://code-class-bundler/external node-commonjs \"util\"","webpack://code-class-bundler/webpack/bootstrap","webpack://code-class-bundler/webpack/runtime/make namespace object","webpack://code-class-bundler/./src/app.mjs"],"sourcesContent":["/*global window, global*/\nvar util = require(\"util\")\nvar assert = require(\"assert\")\nfunction now() { return new Date().getTime() }\n\nvar slice = Array.prototype.slice\nvar console\nvar times = {}\n\nif (typeof global !== \"undefined\" && global.console) {\n    console = global.console\n} else if (typeof window !== \"undefined\" && window.console) {\n    console = window.console\n} else {\n    console = {}\n}\n\nvar functions = [\n    [log, \"log\"],\n    [info, \"info\"],\n    [warn, \"warn\"],\n    [error, \"error\"],\n    [time, \"time\"],\n    [timeEnd, \"timeEnd\"],\n    [trace, \"trace\"],\n    [dir, \"dir\"],\n    [consoleAssert, \"assert\"]\n]\n\nfor (var i = 0; i < functions.length; i++) {\n    var tuple = functions[i]\n    var f = tuple[0]\n    var name = tuple[1]\n\n    if (!console[name]) {\n        console[name] = f\n    }\n}\n\nmodule.exports = console\n\nfunction log() {}\n\nfunction info() {\n    console.log.apply(console, arguments)\n}\n\nfunction warn() {\n    console.log.apply(console, arguments)\n}\n\nfunction error() {\n    console.warn.apply(console, arguments)\n}\n\nfunction time(label) {\n    times[label] = now()\n}\n\nfunction timeEnd(label) {\n    var time = times[label]\n    if (!time) {\n        throw new Error(\"No such label: \" + label)\n    }\n\n    delete times[label]\n    var duration = now() - time\n    console.log(label + \": \" + duration + \"ms\")\n}\n\nfunction trace() {\n    var err = new Error()\n    err.name = \"Trace\"\n    err.message = util.format.apply(null, arguments)\n    console.error(err.stack)\n}\n\nfunction dir(object) {\n    console.log(util.inspect(object) + \"\\n\")\n}\n\nfunction consoleAssert(expression) {\n    if (!expression) {\n        var arr = slice.call(arguments, 1)\n        assert.ok(false, util.format.apply(null, arr))\n    }\n}\n","module.exports = require(\"assert\");","module.exports = require(\"util\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import {CompilerFeature} from \"src/compiler.mjs\";\r\n//import {CompilerFeature} from \"./bundle.js\";\r\n\r\n\r\n// Create ACE editor\r\n  const aceEditor = ace.edit(\"editor\"); \r\n  aceEditor.setTheme(\"ace/theme/monokai\");\r\n  const session = aceEditor.getSession();\r\n\r\n// Create ACE editor 2\r\nconst aceEditor2 = ace.edit(\"editor2\"); \r\naceEditor2.setTheme(\"ace/theme/monokai\");\r\nconst session2 = aceEditor.getSession();\r\naceEditor2.session.setMode(\"ace/mode/c_cpp\");\r\nconst JsCodeArea2 = document.getElementById(\"editor2\");\r\n\r\n\r\nvar languageCode = 'cpp';\r\n//Change Language select section\r\nwindow.changeLanguage = function changeLanguage(){\r\n  let language = $(\"#languages\").val();\r\n  if(language == 'c++' ){\r\n    aceEditor.session.setMode(\"ace/mode/c_cpp\");\r\n    languageCode = 'cpp';\r\n  } else if(language == 'java' ){\r\n    aceEditor.session.setMode(\"ace/mode/java\");\r\n    languageCode = 'java';\r\n  } else if(language == 'python' ){\r\n    aceEditor.session.setMode(\"ace/mode/python\");\r\n    languageCode = 'python3';\r\n  } else if(language == 'node' ){\r\n    aceEditor.session.setMode(\"ace/mode/javascript\");\r\n    languageCode = 'nodejs';\r\n  }\r\n}\r\n\r\n\r\n// Run button to compile code       \r\nwindow.executeCode = function executeCode(){  \r\n  var sourceCode = 'print(\"testing jdoodle API\")';              //source code to test compiler service\r\n  var languageCode = 'python3';  \r\n\r\n//document.getElementById(\"output\").innerHTML = CodeArea; // remove when implementing compiler \r\n\r\n  const compiler = new CompilerFeature(sourceCode, languageCode); \r\n  var compiledOutput;\r\n\r\n  var initializePromise=compiler.submitCode();\r\n  initializePromise.then(function(result){\r\n    compiledOutput = result;\r\n          console.log(\"Initialized details\");\r\n          // Use user details from here\r\n          console.log(compiledOutput)\r\n          document.getElementById(\"output\").innerHTML = compiledOutput;\r\n      }, function(err) {\r\n          console.log(err);\r\n      })\r\n      \r\n\r\n}\r\n"],"names":[],"sourceRoot":""}